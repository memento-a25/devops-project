- name: Deploy Application
  hosts: all
  become: yes
  vars:
    project_dir: "/home/github-runner/devop-blog-project"
    required_ports: [80, 3000, 9090]
  environment:
    DOCKERHUB_USERNAME: "{{ lookup ('env', 'DOCKERHUB_USERNAME') }}"
    DB_USER: "{{ lookup ('env', 'DB_USER') }}"
    DB_PASSWORD: "{{ lookup ('env', 'DB_PASSWORD') }}"
    DB_NAME: "{{ lookup ('env', 'DB_NAME') }}"
    
  tasks:

    - name: Force remove all project containers
      shell: |
        docker compose -f {{ project_dir }}/docker-compose.yml down --rmi all --volumes --remove-orphans --timeout 30 # Basic deletion via Docker Compose
        docker rm -f $(docker ps -aq --filter "label=com.docker.compose.project=devop-blog-project") 2>/dev/null || true # Deletion using project's label named containers
      args:
        chdir: "{{ project_dir }}"
      ignore_errors: yes
  
    - name: Pull latest images
      command: /usr/bin/docker compose -f {{ project_dir }}/docker-compose.yml pull
      args:
        chdir: "{{ project_dir }}"

    - name: Build Do—Åker images
      command: /usr/bin/docker compose -f {{ project_dir }}/docker-compose.yml build
      args:
        chdir: "{{ project_dir }}"
      register: build_result
      failed_when: build_result.rc != 0
   
    - name: Start containers
      command: /usr/bin/docker compose -f {{ project_dir }}/docker-compose.yml up -d
      args:
        chdir: "{{ project_dir }}"
      register: up_result
      failed_when: up_result.rc != 0

    - name: Show container logs on failure
      command: docker compose -f {{ project_dir }}/docker-compose.yml logs
      args:
        chdir: "{{ project_dir }}"
      when: build_result.failed or up_result.failed
